version: '3.5'
services:
  db:
    image: my_postgres:1.0.0
    container_name: 'nms-db'
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data/
    networks:
      - proxy

  api:
    build: ./nms_api
    image: my_nms_api:1.0.0
    container_name: 'nms-api'
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    restart: always
    env_file: './.env'
    volumes:
      - api_data:/api
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - proxy

  celery:
    build: ./nms_api
    image: my_nms_api:1.0.0
    container_name: 'nms-celery'
    command: bash -c "python manage.py migrate && celery -A nms_api worker -l info"
    restart: always
    env_file: './.env'
    volumes:
      - api_data:/api
    depends_on:
      - db
      - redis
    networks:
      - proxy


  redis:
    container_name: 'nms-redis'
    image: redis
    ports:
      - "6379:6379"
    networks:
      - proxy

  web:
    image: nms-web:1.0.0
    build: './web'
    container_name: 'nms-web'
    ports:
      - 3000:80
    networks:
      - proxy

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - "5050:80"
    networks:
      - proxy
    restart: always

volumes:
  api_data:
  pgdata:
  pgadmin:

networks:
  proxy:
    name: my_network